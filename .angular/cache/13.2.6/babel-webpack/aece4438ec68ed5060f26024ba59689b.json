{"ast":null,"code":"import { GlobalService } from '../services/global.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/product.service\";\nimport * as i2 from \"../services/category.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction EditProductComponent_div_3_div_34_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cat_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"selected\", ctx_r3.productToUpdate.productCategory.id == cat_r4.id)(\"ngValue\", cat_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cat_r4.name, \" \");\n  }\n}\n\nfunction EditProductComponent_div_3_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"label\", 7);\n    i0.ɵɵtext(2, \"Cat\\u00E9gorie:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function EditProductComponent_div_3_div_34_Template_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.productToUpdate.productCategory.id = $event;\n    });\n    i0.ɵɵtemplate(4, EditProductComponent_div_3_div_34_option_4_Template, 2, 3, \"option\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 21);\n    i0.ɵɵtext(6, \"+\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.productToUpdate.productCategory.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.allCategories._embedded.categories);\n  }\n}\n\nfunction EditProductComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"form\", 4, 5);\n    i0.ɵɵlistener(\"ngSubmit\", function EditProductComponent_div_3_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n\n      const _r1 = i0.ɵɵreference(2);\n\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onUpdateProduct(_r1.value);\n    });\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"label\", 7);\n    i0.ɵɵtext(5, \"D\\u00E9signation: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function EditProductComponent_div_3_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.productToUpdate.designation = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n    i0.ɵɵtext(9, \"Description: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"textarea\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function EditProductComponent_div_3_Template_textarea_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.productToUpdate.description = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 10);\n    i0.ɵɵtext(13, \"Prix courant:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function EditProductComponent_div_3_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.productToUpdate.currentPrice = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 10);\n    i0.ɵɵtext(17, \"En promotion ? \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \"\\u00A0 \");\n    i0.ɵɵelementStart(19, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function EditProductComponent_div_3_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.productToUpdate.isOnPromotion = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 6)(21, \"label\", 10);\n    i0.ɵɵtext(22, \"S\\u00E9lectionn\\u00E9 ?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(23, \"\\u00A0 \");\n    i0.ɵɵelementStart(24, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function EditProductComponent_div_3_Template_input_ngModelChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.productToUpdate.isSelected = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\", 6)(26, \"label\", 10);\n    i0.ɵɵtext(27, \"Disponible ?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(28, \"\\u00A0 \");\n    i0.ɵɵelementStart(29, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function EditProductComponent_div_3_Template_input_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.productToUpdate.isAvailable = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 6)(31, \"label\", 7);\n    i0.ɵɵtext(32, \"Quantit\\u00E9:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function EditProductComponent_div_3_Template_input_ngModelChange_33_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.productToUpdate.quantity = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(34, EditProductComponent_div_3_div_34_Template, 7, 2, \"div\", 16);\n    i0.ɵɵelementStart(35, \"button\", 17);\n    i0.ɵɵtext(36, \"Modifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(37, \"\\u00A0 \");\n    i0.ɵɵelementStart(38, \"button\", 18);\n    i0.ɵɵtext(39, \"Annuler\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.productToUpdate.designation);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.productToUpdate.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.productToUpdate.currentPrice);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"checked\", ctx_r0.productToUpdate.isOnPromotion);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.productToUpdate.isOnPromotion);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"checked\", ctx_r0.productToUpdate.isSelected);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.productToUpdate.isSelected);\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate(\"checked\", ctx_r0.productToUpdate.isAvailable);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.productToUpdate.isAvailable);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.productToUpdate.quantity);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.productToUpdate.productCategory && ctx_r0.allCategories);\n  }\n}\n\nexport let EditProductComponent = /*#__PURE__*/(() => {\n  class EditProductComponent {\n    constructor(productService, categoryService, activatedRoute, router) {\n      this.productService = productService;\n      this.categoryService = categoryService;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.uriProductToUpdate = \"\";\n    }\n\n    ngOnInit() {\n      // recuperer et decrypter l uri passe en param par le component ProductsGridView\n      this.uriProductToUpdate = atob(this.activatedRoute.snapshot.params['uriProductToEdit']);\n      this.productService.getProduct(this.uriProductToUpdate).subscribe(response => {\n        this._productToUpdate = response; // recuperer la list des categories pr l afficher ds <select>\n\n        this.setAllCategories(); // \n\n        this.setCategoryAssociatedWithProductToUpdat(this._productToUpdate);\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    onUpdateProduct(updatingFormFields) {\n      // modifer les infos du product\n      this.productService.patchProduct(this.uriProductToUpdate, updatingFormFields).subscribe(response => {\n        // modifier la category associee\n        this.updateAssociationProductCategory(updatingFormFields);\n        alert(\"Produit \" + updatingFormFields.designation + \" bien modifié\");\n        console.log(\"updatingFormFields\");\n        console.log(updatingFormFields);\n        this.router.navigateByUrl(\"/products-grid\");\n      }, err => {\n        console.log(err);\n      });\n    } // recuperer la category associee au Product choisi ds la grille\n\n\n    setCategoryAssociatedWithProductToUpdat(productToUpdate) {\n      let URICategoryAssociatedWithProductToUpdat = productToUpdate._links.category.href;\n      this.categoryService.getCategory(URICategoryAssociatedWithProductToUpdat).subscribe(response => {\n        this._productToUpdate.productCategory = response;\n        console.log(\"Category of productToUpdate\");\n        console.log(this._productToUpdate.productCategory);\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    updateAssociationProductCategory(updatingFormFields) {\n      // pr le cas de modification, vu la contrainte de manipulation de l'id de la category ds <select>, on ne peut utiliser qu'une SEULE mtd pr recuperer les liens: c'est la construction manuelle\n      let URIOfProductToBindTo = this.uriProductToUpdate + \"/category\";\n      let URIOfCategoryToBind = GlobalService.HOST + \"/categories/\" + updatingFormFields.productCategoryId;\n      console.log(\"URIOfProductToBindTo\");\n      console.log(URIOfProductToBindTo);\n      console.log(\"URIOfCategoryToBind\");\n      console.log(URIOfCategoryToBind);\n      this.productService.updateProductAssociation(URIOfProductToBindTo, URIOfCategoryToBind).subscribe(response => {\n        // la reponse retournee par PUT est vide\n        console.log(\"Category updated\");\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    setAllCategories() {\n      this.categoryService.getAllCategories().subscribe(response => {\n        //this._categories = new Array<Category>();\n        this._allCategories = response;\n        console.log(\"_allCategories\");\n        console.log(this._allCategories);\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    get productToUpdate() {\n      return this._productToUpdate;\n    }\n\n    set productToUpdate(p) {\n      this._productToUpdate = p;\n    }\n\n    get allCategories() {\n      return this._allCategories;\n    }\n\n    set allCategories(allCategories) {\n      this._allCategories = allCategories;\n    }\n\n  }\n\n  EditProductComponent.ɵfac = function EditProductComponent_Factory(t) {\n    return new (t || EditProductComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  EditProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditProductComponent,\n    selectors: [[\"app-edit-product\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [\"class\", \"panel-body\", 4, \"ngIf\"], [1, \"panel-body\"], [3, \"ngSubmit\"], [\"updatingForm\", \"ngForm\"], [1, \"form-group\"], [1, \"control-label\"], [\"type\", \"text\", \"name\", \"designation\", \"ngModel\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"description\", \"cols\", \"20\", \"rows\", \"6\", \"ngModel\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"label-control\"], [\"type\", \"text\", \"name\", \"currentPrice\", \"ngModel\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", \"name\", \"isOnPromotion\", \"ngModel\", \"\", 3, \"checked\", \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", \"name\", \"isSelected\", \"ngModel\", \"\", 3, \"checked\", \"ngModel\", \"ngModelChange\"], [\"type\", \"checkbox\", \"name\", \"isAvailable\", \"ngModel\", \"\", 3, \"checked\", \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"required\", \"\", \"name\", \"quantity\", \"ngModel\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"form-group\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"button\", \"routerLink\", \"/products-grid\", 1, \"btn\", \"btn-default\"], [\"name\", \"productCategoryId\", \"ngModel\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"selected\", \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"routerLink\", \"/new-category\", 1, \"btn\", \"btn-success\", \"btn-xs\"], [3, \"selected\", \"ngValue\"]],\n    template: function EditProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Edition Produit: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, EditProductComponent_div_3_Template, 40, 11, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.productToUpdate);\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i5.CheckboxControlValueAccessor, i5.NumberValueAccessor, i5.RequiredValidator, i5.SelectControlValueAccessor, i4.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i3.RouterLink],\n    styles: [\"\"]\n  });\n  return EditProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}